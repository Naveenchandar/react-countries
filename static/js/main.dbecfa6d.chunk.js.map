{"version":3,"sources":["actions/types.js","reducer/index.js","store/index.js","actions/index.js","helper/index.js","components/countries.js","components/modal.js","components/index.js","App.js","index.js"],"names":["FETCH_COUNTRIES_LIST","FETCH_COUNTRY_DETAILS","FETCH_ERROR_MSG","initialState","counrtriesList","counrtryDetails","errorMsg","CountryReducer","state","action","type","types","Object","assign","payload","store","createStore","Reducers","loadCountriesList","data","loadCountryDetails","fetchErrorMsg","a","fetch","then","json","length","dispatch","catch","error","console","log","targetValue","responseData","status","countryDetails","Countries","handleClick","Row","map","item","Col","xs","md","lg","className","Card","style","width","onClick","Header","name","Body","Img","variant","src","flag","region","timezones","Title","capital","Text","population","CountryModal","props","Modal","size","aria-labelledby","centered","closeButton","id","alt","demonym","currencies","nativeName","numericCode","callingCodes","Footer","Button","onHide","fetchCountryDetails","setState","showCountryDetails","handleSearch","event","target","value","searchValue","fetchCountryByName","fetchCountriesList","this","Container","Form","Group","as","controlId","Control","required","placeholder","onChange","e","show","Component","connect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbecfa6d.chunk.js","sourcesContent":["export const FETCH_COUNTRIES_LIST = \"FETCH_COUNTRIES_LIST\";\r\nexport const FETCH_COUNTRY_DETAILS = \"FETCH_COUNTRY_DETAILS\";\r\nexport const FETCH_ERROR_MSG = \"FETCH_ERROR_MSG\";","import * as types from '../actions/types';\r\n\r\nexport const initialState = {\r\n    counrtriesList: [],\r\n    counrtryDetails: {},\r\n    errorMsg: ''\r\n\r\n};\r\nconst CountryReducer = function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case types.FETCH_COUNTRIES_LIST:\r\n            return Object.assign({}, state, {\r\n                counrtriesList: action.payload.counrtriesList\r\n            });\r\n        case types.FETCH_COUNTRY_DETAILS:\r\n            return Object.assign({}, state, {\r\n                counrtryDetails: action.payload.counrtryDetails\r\n            });\r\n        case types.FETCH_ERROR_MSG:\r\n            return Object.assign({}, state, {\r\n                errorMsg: action.payload.errorMsg\r\n            });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default CountryReducer;\r\n","import { createStore } from 'redux';\r\nimport Reducers from '../reducer'\r\n\r\nconst store = createStore(\r\n    Reducers\r\n);\r\nexport default store;","import * as types from './types';\r\n\r\nexport function loadCountriesList(data) {\r\n  return {\r\n    type: types.FETCH_COUNTRIES_LIST,\r\n    payload: {\r\n      \"counrtriesList\": data\r\n    }\r\n  };\r\n}\r\n\r\nexport function loadCountryDetails(data) {\r\n  return {\r\n    type: types.FETCH_COUNTRY_DETAILS,\r\n    payload: {\r\n      \"counrtryDetails\": data\r\n    }\r\n  };\r\n}\r\n\r\nexport function fetchErrorMsg(data) {\r\n  return {\r\n    type: types.FETCH_ERROR_MSG,\r\n    payload: {\r\n      \"errorMsg\": data\r\n    }\r\n  };\r\n}","import store from '../store/index';\r\nimport {\r\n    loadCountriesList,\r\n    loadCountryDetails,\r\n    fetchErrorMsg\r\n} from '../actions/index';\r\n\r\nexport async function fetchCountriesList() {\r\n    await fetch('https://restcountries.eu/rest/v2/all')\r\n        .then(data => data.json())\r\n        .then((data) => {\r\n            if (data?.length > 0) {\r\n                store.dispatch(loadCountriesList(data));\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('error', error);\r\n        })\r\n}\r\n\r\nexport async function fetchCountryByName({ targetValue }) {\r\n    const responseData = await fetch(`https://restcountries.eu/rest/v2/name/${targetValue}`)\r\n    if (responseData.status !== 200) {\r\n        store.dispatch(fetchErrorMsg('No Countries Found'));\r\n    } else {\r\n        const data = await responseData.json();\r\n        if (data?.length > 0) {\r\n            store.dispatch(loadCountriesList(data));\r\n            store.dispatch(fetchErrorMsg(''))\r\n        } else {\r\n            store.dispatch(loadCountriesList([]));\r\n        }\r\n    }\r\n}\r\n\r\nexport async function fetchCountryDetails({ countryDetails }) {\r\n    store.dispatch(loadCountryDetails(countryDetails))\r\n}","import React from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n} from 'react-bootstrap';\r\nimport '../App.scss';\r\n\r\nexport default function Countries({ counrtriesList, handleClick }) {\r\n    return (\r\n        <Row>\r\n            {counrtriesList?.map(item => {\r\n                return (\r\n                    <Col xs={6} md={4} lg={3} key={item.name} className='country-card'>\r\n                        <Card\r\n                            style={{ width: '16rem' }}\r\n                            className=\"mb-2\"\r\n                            onClick={() => handleClick(item)}\r\n                        >\r\n                            <Card.Header>{item.name}</Card.Header>\r\n                            <Card.Body>\r\n                                <div className='card-image'>\r\n                                    <Card.Img variant=\"top\" src={item.flag} />\r\n                                    <div>\r\n                                        <label className='label-text'>Region: {item.region}</label>\r\n                                        <label className='label-text'>Time zone: {item.timezones[0]}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <Card.Title className='capital'>Capital: {item.capital ? item.capital : '-'} </Card.Title>\r\n                                <Card.Text className='population'>\r\n                                    <label>Population: <b> {item.population} </b></label>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            })}\r\n        </Row>\r\n    )\r\n}","import React from 'react';\r\nimport {\r\n    Modal,\r\n    Button\r\n} from 'react-bootstrap'\r\n\r\nexport default function CountryModal(props) {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {props.counrtryDetails?.name}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className='modal-country-flagdiv'>\r\n                    <img src={props.counrtryDetails?.flag} alt='country flag' />\r\n                </div>\r\n                <div className='modal-country-details'>\r\n                    <ul>\r\n                        <li>Demonym</li>\r\n                        <li>Capital</li>\r\n                        <li>Currency</li>\r\n                        <li>Region</li>\r\n                        <li>Native name</li>\r\n                        <li>Timezone</li>\r\n                        <li>Numeric Code</li>\r\n                        <li>Calling Codes</li>\r\n                    </ul>\r\n                    <ul>\r\n                        <li>{props.counrtryDetails?.demonym}</li>\r\n                        <li>{props.counrtryDetails?.capital}</li>\r\n                        <li>{props.counrtryDetails?.currencies[0]?.name}</li>\r\n                        <li>{props.counrtryDetails?.region}</li>\r\n                        <li>{props.counrtryDetails?.nativeName}</li>\r\n                        <li>{props.counrtryDetails?.timezones[0]}</li>\r\n                        <li>{props.counrtryDetails?.numericCode}</li>\r\n                        <li>{props.counrtryDetails?.callingCodes}</li>\r\n                    </ul>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Container,\r\n    Col,\r\n    Form\r\n} from 'react-bootstrap';\r\nimport {\r\n    fetchCountriesList,\r\n    fetchCountryByName,\r\n    fetchCountryDetails\r\n} from '../helper/index';\r\nimport CountriesList from './countries';\r\nimport CountryModal from './modal';\r\n\r\nclass Countries extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchValue: '',\r\n            showCountryDetails: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchCountriesList();\r\n    }\r\n\r\n    handleClick = (countryDetails) => {\r\n        fetchCountryDetails({ countryDetails })\r\n        this.setState({\r\n            showCountryDetails: true\r\n        })\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        const targetValue = event?.target?.value;\r\n        this.setState({\r\n            searchValue: targetValue\r\n        })\r\n        if (targetValue) {\r\n            fetchCountryByName({ targetValue });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { counrtriesList, errorMsg, counrtryDetails } = this.props;\r\n        return (\r\n            <Container>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\" className='search-input'>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            id='searchValue'\r\n                            name='searchValue'\r\n                            placeholder=\"Search by country\"\r\n                            value={this.state.searchValue}\r\n                            onChange={(e) => this.handleSearch(e)}\r\n                        />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                {!errorMsg ?\r\n                    <CountriesList\r\n                        counrtriesList={counrtriesList}\r\n                        handleClick={this.handleClick}\r\n                    /> : errorMsg\r\n                }\r\n                {this.state.showCountryDetails &&\r\n                    <CountryModal\r\n                        show={this.state.showCountryDetails}\r\n                        onHide={() => this.setState({ showCountryDetails: false })}\r\n                        counrtryDetails={counrtryDetails}\r\n                    />\r\n                }\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        counrtriesList: state.counrtriesList,\r\n        errorMsg: state.errorMsg,\r\n        counrtryDetails: state.counrtryDetails,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Countries);\r\n","import './App.css';\r\nimport Countries from './components/index';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/index';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <Countries />\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}